# ----- 공통 -----
worker_processes 1;
events { worker_connections 1024; }

http {
  include       mime.types;
  sendfile      on;

  proxy_buffering on;
  proxy_buffers 8 16k;
  proxy_busy_buffers_size 24k;

  # Cloudflare IP만 허용 (예시: 실제 CF IPv4/IPv6 대역 추가 필요)
  # allow 173.245.48.0/20;
  # allow 103.21.244.0/22;
  # ... (Cloudflare IP 목록 전체 추가)
  # deny all;

  # 80 → https 리다이렉트
  server {
    listen 80;
    server_name web-util.com www.web-util.com;
    return 301 https://$host$request_uri;
  }

  # 443 (원본 인증서는 Cloudflare와의 구간용)
  server {
    listen 443 ssl;
    server_name web-util.com www.web-util.com;

    # ★ Cloudflare Origin Certificate 사용 (브라우저 직접접속 금지)
    ssl_certificate     C:/workspace/nginx/ssl/origin.crt;
    ssl_certificate_key C:/workspace/nginx/ssl/origin.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # (선택) 원본 443을 CF 전용으로 제한
    # include C:/workspace/nginx/conf/cloudflare-ips.conf;  # 여기에 allow/deny 나열
    # 또는 위 allow/deny 라인들을 직접 명시

    # Nuxt SSR 프록시
  # 레거시 경로 301 (서버 사이드 SEO용)
  location = /string-utils       { return 301 https://www.web-util.com/string/utils; }
  location = /localstorage-utils { return 301 https://www.web-util.com/string/storage; }
  location = /number-utils       { return 301 https://www.web-util.com/string/number; }
  location = /date-utils         { return 301 https://www.web-util.com/string/date; }
  location = /json-utils         { return 301 https://www.web-util.com/data/json; }
  location = /csv-utils          { return 301 https://www.web-util.com/data/csv; }
  location = /array-utils        { return 301 https://www.web-util.com/data/array; }
  location = /sql-utils          { return 301 https://www.web-util.com/database/sql; }
  location = /timer-json         { return 301 https://www.web-util.com/tools/timer-json; }
  location = /color-utils        { return 301 https://www.web-util.com/tools/color; }
  location = /timer              { return 301 https://www.web-util.com/tools/timer; }
  location = /qr-generator       { return 301 https://www.web-util.com/tools/qr-generator; }

    location / {
      proxy_pass http://127.0.0.1:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # 정적 캐시 (SSR라도 정적 에셋 경유 시 캐시)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      proxy_pass http://127.0.0.1:3000;
      access_log off;
    }

    # 보안 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # CSP는 필요 출처만 허용(혼합콘텐츠 방지). 외부 스크립트/CDN 쓰면 그 도메인 추가
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' https: 'unsafe-inline'; style-src 'self' https: 'unsafe-inline'; img-src 'self' https: data: blob:; font-src 'self' https: data:; connect-src 'self' https:; frame-ancestors 'self';" always;

    # Gzip 압축 (Windows 빌드 지원 시 활성)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
      text/plain
      text/css
      text/xml
      text/javascript
      application/javascript
      application/xml+rss
      application/json;
  }
}