## nginx 프로덕션 설정 (HTTPS 강제 + 301 리다이렉트 + SPA 라우팅)

# 80 → HTTPS 강제 리다이렉트
server {
    listen 80;
    server_name web-util.com www.web-util.com;
    return 301 https://www.web-util.com$request_uri;
}

# https://web-util.com → https://www.web-util.com 리다이렉트 (인증서 발급 시 활성)
server {
    listen 443 ssl http2;
    server_name web-util.com;

    # SSL 인증서 경로는 실제 발급 경로로 교체 필요
    ssl_certificate     /etc/letsencrypt/live/www.web-util.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.web-util.com/privkey.pem;
    return 301 https://www.web-util.com$request_uri;
}

# 메인 서버 블록 (HTTPS)
server {
    listen 443 ssl http2;
    server_name www.web-util.com;
    root /var/www/html;
    index index.html;

    # SSL 인증서 (예시 경로)
    ssl_certificate     /etc/letsencrypt/live/www.web-util.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.web-util.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # HSTS (HTTPS 강제)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # 정적 파일 캐싱 (해시 포함 자산을 immutable로 가정)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 애플리케이션 라우팅 (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Brotli (ngx_brotli 모듈이 있을 때만 주석 해제)
    # brotli on;
    # brotli_comp_level 5;
    # brotli_static on;

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # CSP: 필요한 출처만 허용 (Kakao Ads, jsDelivr 등). 필요에 따라 조정
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' https: 'unsafe-inline'; style-src 'self' https: 'unsafe-inline'; img-src 'self' https: data: blob:; font-src 'self' https: data:; connect-src 'self' https:; frame-ancestors 'self';" always;

    # 404/50x 처리
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; }
}
